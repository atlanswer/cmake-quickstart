name: CMake Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_testing:
    name: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: true
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/extern/vcpkg/archives

    steps:
    - name: Checkout repository 📂
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Prepare CMake & Ninja 🛒
      uses: lukka/get-cmake@latest
    
    - name: Create vcpkg binary cache 📁
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash

    - name: Restore vcpkg 🧳
      uses: actions/cache@v3
      with:
        path: |
          ${{ github.workspace }}/extern/vcpkg/archives
        key: |
          ${{ matrix.triplet }}-${{ hashFiles('vcpkg.json') }}-${{ hashFiles('.git/modules/vcpkg/HEAD') }}    

    - name: Prepare MSVC on Windows 🪟
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure ⚙️
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake --preset ninja-multi-config

    - name: Build ⚒️
      # Build your program with the given configuration
      run: cmake --build --preset ninja-debug-build

    - name: Test 🧪
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --preset default-test
